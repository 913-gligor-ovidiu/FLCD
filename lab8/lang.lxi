%{
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>

    int lines = 1;
%}

%option noyywrap
%option caseless

DIGIT [0-9]
NON_ZERO_DIGIT [1-9]
INT_CONSTANT [+-]?{NON_ZERO_DIGIT}{DIGIT}*|0
LETTER [a-zA-Z]
STRING_CONSTANT (\"({LETTER}|{DIGIT})*\")
IDENTIFIER {LETTER}({LETTER}|{DIGIT})*
BAD_IDENTIFIER ({DIGIT})+({LETTER})+({LETTER}|{DIGIT})*

%%
"var"|"int"|"string"|"bool"|"break"|"char"|"continue"|"else"|"if"|"for"|"while"|"read"|"print"|"true"|"false"|"return"|"and"|"or" {printf("%s - reserved word\n", yytext);}

"+"|"-"|"*"|"/"|"%"|"="|"<"|">"|"!"|"=="|"<="|">="|"!=" {printf("%s - operator\n", yytext);}

"["|"]"|"("|")"|";"|","|":" {printf("%s - separator\n", yytext);}

{IDENTIFIER} {printf("%s - identifier\n", yytext);}

{BAD_IDENTIFIER} {printf("Error at token %s at line %d\n", yytext, lines); exit(1);}

{INT_CONSTANT} {printf("%s - integer constant\n", yytext);}

{STRING_CONSTANT} {printf("%s - string constant\n", yytext);}

[ \t]+ {}

[\n] {++lines;}

%%

int main(int argc, char** argv) {
    if (argc > 1) 
        yyin = fopen(argv[1], "r");
    else 
        yyin = stdin;
    yylex();
}